import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import LabelEncoder

# Load the dataset
df = pd.read_csv('/content/Accident .csv')
# Display the dataset
print("Complete Database:")
print(df.head())

# Apply Label Encoding to the target variable (Accident severity)
label_encoder = LabelEncoder()
df['Accident severity'] = label_encoder.fit_transform(df['Accident severity'])

# Define the independent variables (features) and apply one-hot encoding to categorical columns
X = pd.get_dummies(df[['Weather', 'Road surface', 'Road type', 'Speed limit', 'Vehicle speed', 'number of victims']])

# Define the dependent variable (target)
y = df['Accident severity']

# Split the data into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# Instantiate and fit the linear regression model
model = LinearRegression()
model.fit(X_train, y_train)

# Check the classes encoded by LabelEncoder for reference
print("Accident severity encoding:", label_encoder.classes_)

# To make predictions
y_pred = model.predict(X_test)

# Print the first few predictions
print("Predictions:", y_pred[:5])
